#
# Copyright 2013-2022 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: JDL tests
concurrency:
  # Group PRs by head_ref, push to main branch by commit id, and others branch by ref.
  group: ${{ github.workflow }}-${{ github.head_ref || (github.ref == 'refs/heads/main' && github.sha) || github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'generators/ci-cd/**'
  pull_request:
    types: [closed, opened, synchronize, reopened]
    branches:
      - '*'
    paths-ignore:
      - 'generators/ci-cd/**'
permissions:
  contents: read
jobs:
  applications:
    name: ${{ matrix.suite }} (${{ matrix.os }}, ${{ matrix.build-tool }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/app
    if: github.event.action != 'closed'
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2022]
        build-tool: [maven, gradle]
        suite:
          - postgresql-mvc
          - postgresql-webflux
        include:
          - os: ubuntu-20.04
            build-tool: gradle
            extra-args: '-PnativeBuildArgs=-J-Xmx10g'
          - os: macos-11
            build-tool: maven
            extra-args: '"-Dnative-build-args=-J-Xmx13g"'
          - os: macos-11
            build-tool: gradle
            extra-args: '-PnativeBuildArgs=-J-Xmx13g'
          - os: windows-2022
            build-tool: maven
            profile: dev
            e2e: 'false'
          - os: windows-2022
            build-tool: gradle
            profile: dev
            e2e: 'false'
            extra-args: '-PnativeBuildArgs=-J-Xmx10g'
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: create app folder'
        run: mkdir app
        working-directory: ${{ github.workspace }}
      - name: 'SETUP: Configure keycloak host'
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: echo "127.0.0.1 keycloak" | sudo tee -a /etc/hosts
      - name: 'SETUP: setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 'SETUP: checkout generator-jhipster-native'
        uses: actions/checkout@v3
        with:
          path: generator-jhipster-native
          fetch-depth: 2
      - name: 'SETUP: install generator-jhister-native'
        run: |
          npm ci --prod
          npm link
        working-directory: ${{ github.workspace }}/generator-jhipster-native
      - name: 'SETUP: setup graalvm'
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'SETUP: get date'
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"

      - name: 'SETUP Linux: configure swap space'
        if: runner.os == 'Linux'
        # v1.0 (49819abfb41bd9b44fb781159c033dba90353a7c)
        uses: pierotofy/set-swap-space@49819abfb41bd9b44fb781159c033dba90353a7c
        with:
          swap-size-gb: 10

      - name:
          'SETUP Windows: configure pagefile'
          # v1.2 (7e234852c937eea04d6ee627c599fb24a5bfffee)
        uses: al-cheb/configure-pagefile-action@7e234852c937eea04d6ee627c599fb24a5bfffee
        if: runner.os == 'Windows'
        with:
          minimum-size: 10GB
          maximum-size: 12GB
      - name: 'SETUP Windows: check pagefile'
        if: runner.os == 'Windows'
        run: |
          (Get-CimInstance Win32_PageFileUsage).AllocatedBaseSize
        shell: pwsh
      - name: 'SETUP Windows: force npm to use bash'
        if: runner.os == 'Windows'
        run: |
          echo "script-shell=bash" >.npmrc
          cat .npmrc

      - name: 'SETUP MacOS: load Homebrew cache'
        uses: actions/cache@v3
        if: runner.os == 'macOS'
        with:
          path: |
            ~/Library/Caches/Homebrew/downloads/*--Docker.dmg
          key: brew-actions-setup-docker-1.0.11
          restore-keys: brew-actions-setup-docker-
      - name:
          'SETUP MacOS: install docker'
          # v1.0.11 (5d9a5f65f510c01ec5f0bd81d5c95768b1ec032a)
        uses: docker-practice/actions-setup-docker@5d9a5f65f510c01ec5f0bd81d5c95768b1ec032a
        # alternative solution https://github.com/actions/runner/issues/1456
        if: runner.os == 'macOS'
        timeout-minutes: 15
        with:
          docker_buildx: false
      - run: ls ~/Library/Caches/Homebrew/
        if: runner.os == 'macOS'

      - name: 'SETUP: load npm cache'
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
          key: ${{ runner.os }}-npm-${{ matrix.suite }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('generator-jhipster-native/package*.json') }}
      - name: 'SETUP: load maven cache'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.suite }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('generator-jhipster-native/package*.json') }}
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - name: 'PROJECT: generate'
        run: 'JHI_PROFILE=${{ matrix.profile }} jhipster-native jdl "${{ github.workspace }}/generator-jhipster-native/test-integration/samples/${{ matrix.suite }}.jdl" --build ${{ matrix.build-tool }} --no-insight --skip-git --skip-commit-hook --skip-jhipster-dependencies --no-cypress-audit'
      - name: 'TESTS: backend tests'
        run: npm run ci:backend:test
      # Native build is memory intensive, containers should not be started.
      - name: 'TESTS: build application package'
        timeout-minutes: 60
        run: npm run native-package -- ${{ matrix.extra-args }}
      - name: 'TESTS: start docker dependencies'
        run: npm run ci:e2e:prepare
        if: matrix.e2e != 'false'
      - name: 'TESTS: wait'
        run: sleep 60
        if: matrix.os == 'macos-11'
      - name: 'TESTS: run e2e'
        run: npm run native-e2e --if-present
        if: matrix.e2e != 'false'
