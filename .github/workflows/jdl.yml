name: JDL tests
concurrency:
  # Group PRs by head_ref, push to main branch by commit id, and others branch by ref.
  group: ${{ github.workflow }}-${{ github.head_ref || (github.ref == 'refs/heads/main' && github.sha) || github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'generators/ci-cd/**'
  pull_request:
    types: [closed, opened, synchronize, reopened]
    branches:
      - '*'
    paths-ignore:
      - 'generators/ci-cd/**'
permissions:
  contents: read
jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - id: build
        run: |
          npm ci --ignore-scripts
          cli/cli.cjs github-build-matrix
  applications:
    name: ${{ matrix.suite }} (${{ matrix.os }}, ${{ matrix.build-tool }})
    runs-on: ${{ matrix.os }}
    needs: build-matrix
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/app
    if: github.event.action != 'closed'
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.build-matrix.outputs.matrix)}}
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: checkout generator-jhipster-native'
        uses: actions/checkout@v4
        with:
          path: generator-jhipster-native
          fetch-depth: 2
      - uses: jhipster/actions/setup-runner@v0
        with:
          node-version: 20
          maven-cache: true
          binary-dir: ${{ github.workspace }}/generator-jhipster-native/cli/
      - name: 'SETUP: install generator-jhister-native'
        run: npm ci --prod
        working-directory: ${{ github.workspace }}/generator-jhipster-native
      - name: 'SETUP: setup graalvm'
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.3'
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: 'SETUP: get date'
        id: get-date
        run: echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

      - name: 'SETUP Windows: force npm to use bash'
        if: runner.os == 'Windows'
        run: |
          echo "script-shell=bash" >.npmrc
          cat .npmrc

      - name: 'SETUP MacOS: load Homebrew cache'
        uses: actions/cache@v4
        if: runner.os == 'macOS'
        with:
          path: |
            ~/Library/Caches/Homebrew/downloads/*--Docker.dmg
          key: brew-actions-setup-docker-1.0.11
          restore-keys: brew-actions-setup-docker-
      - name:
          'SETUP MacOS: install docker'
          # v1.0.11 (5d9a5f65f510c01ec5f0bd81d5c95768b1ec032a)
        uses: docker-practice/actions-setup-docker@fd7ecdac7caf8e2c541a48c9bcc280aae59a8461
        # alternative solution https://github.com/actions/runner/issues/1456
        if: runner.os == 'macOS'
        timeout-minutes: 30
        with:
          docker_buildx: false
      - run: ls ~/Library/Caches/Homebrew/
        if: runner.os == 'macOS'
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - name: 'PROJECT: generate'
        run: 'cli.cjs generate-sample ${{ matrix.sample-name }}.jdl --build ${{ matrix.build-tool }} --no-insight --skip-commit-hook --skip-jhipster-dependencies --no-cypress-audit ${{ matrix.jdl-extra-args }}'
        env:
          JHI_PROFILE: ${{ matrix.default-environment }}
      - uses: jhipster/actions/compare-sample@v0
        id: compare
        with:
          generator-path: generator-jhipster-native
          cmd: 'cli.cjs generate-sample ${{ matrix.sample-name }}.jdl --build ${{ matrix.build-tool }} --no-insight --skip-git --skip-commit-hook --skip-jhipster-dependencies --no-cypress-audit --skip-install ${{ matrix.jdl-extra-args }}'
        env:
          JHI_PROFILE: ${{ matrix.default-environment }}
      - name: 'Windows: install npm dependencies'
        # Workaround max PATH size https://github.com/jhipster/generator-jhipster-native/pull/65#issuecomment-1249555392
        if: runner.os == 'Windows'
        run: npm install

      - name: 'TESTS: backend tests'
        run: npm run ci:backend:test
      # Native build is memory intensive, containers should not be started.
      - name: 'TESTS: build application package'
        timeout-minutes: 60
        run: npm run native-package -- ${{ matrix.native-package-extra-args }}
      - name: 'TESTS: start docker dependencies'
        run: npm run ci:e2e:prepare
        if: matrix.e2e != 'false'
      - name: 'TESTS: run e2e'
        run: npm run native-e2e --if-present
        if: matrix.e2e != 'false'
      - name: Dump docker logs
        if: always() && matrix.e2e != 'false'
        uses: jwalton/gh-docker-logs@v2
